@model OATools.Models.TimedBitchLetter

@{
    ViewBag.Title = "B*tch Letter";
}

<div>
    @* Add a countdown timer for God's response. *@
    <div class="row" style="padding-top: 10px;">
        <div style="padding-right: 10px;">
            <button id="start" class="btn btn-outline-primary" style="padding-top: 10px;" onclick="startButton()">Start Time</button>
            <div id="startTime"></div>
        </div>
        <div>
            <button id="stop" class="btn btn-outline-primary" style="padding-top: 10px;" onclick="stopButton()" disabled="true">Stop Time</button>
            <div id="stopTime"></div>
        </div>
    </div>
    <p id="demo"></p>
    <div style="padding-top: 10px;">

        @using (Html.BeginForm("BitchLetter", "Toolkit"))
        {
            <div>
                @Html.LabelFor(m => m.Subject)
                <br />
                @Html.TextBoxFor(m => m.Subject)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Bitching)
                <br />
                @Html.TextAreaFor(m => m.Bitching)
                @Html.ValidationMessageFor(m => m.Bitching, "", new { @style = "color:red" })
            </div>
            <div>
                Total time for God's Response: <span id="time"></span>
                <br />
                <button id="countdown" type="button" class="btn btn-outline-primary" disabled="true" onclick="beginCountdown()">Begin Countdown</button>
            </div>
            <div class="form-group" style="padding-top: 10px;">
                @Html.LabelFor(m => m.GodsResponse)
                <br />
                @Html.TextAreaFor(m => m.GodsResponse)
            </div>

            @*<button class="btn btn-primary" type="submit">Submit</button>*@
        }
    </div>
</div>


@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        const start = document.getElementById('start');
        const stop = document.getElementById('stop');
        const countdown = document.getElementById('countdown');
        let startTime;
        let stopTime;

        let addZero = num => {
            return num < 10 ? "0" + num : num;
        }

        let GetTime = () => {
            let time = new Date();

            var h = time.getHours();
            var m = addZero(time.getMinutes());
            var s = addZero(time.getSeconds());

            return h + ":" + m + ":" + s;
        }

        let startButton = () => {
            document.getElementById('startTime').innerHTML = GetTime();
            startTime = new Date();
            start.disabled = true;
            stop.disabled = false;
        }

        let stopButton = () => {
            document.getElementById('stopTime').innerHTML = GetTime();
            stopTime = new Date();
            stop.disabled = true;
            countdown.disabled = false;

            let countdownTime = stopTime - startTime;
            document.getElementById('time').innerHTML = setCountdownTime(countdownTime);
        }

        let setCountdownTime = countdownTime => {
            var hours = Math.floor((countdownTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((countdownTime % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((countdownTime % (1000 * 60)) / 1000);

            return `${hours} : ${minutes} : ${seconds}`;
        }

        let setCountdown = countdownTime => {
            // Update the count down every 1 second
            var x = setInterval(function () {
                // Time calculations for days, hours, minutes and seconds
                var hours = Math.floor((countdownTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((countdownTime % (1000 * 60 * 60)) / (1000 * 60));
                var seconds = Math.floor((countdownTime % (1000 * 60)) / 1000);

                // Display the result
                countdown.innerHTML = hours + "h " + minutes + "m " + seconds + "s ";

                // If the count down is finished, write some text
                if (countdownTime < 0) {
                    clearInterval(x);
                    countdown.innerHTML = "You did it!";
                }
            }, 1000);
        }

    </script>

    <script>
        // Set the date we're counting down to
        var countDownDate = new Date("Jan 5, 2021 15:37:25").getTime();

        // Update the count down every 1 second
        var x = setInterval(function () {

            // Get today's date and time
            var now = new Date().getTime();

            // Find the distance between now and the count down date
            var distance = countDownDate - now;

            // Time calculations for days, hours, minutes and seconds
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            // Display the result in the element with id="demo"
            document.getElementById("demo").innerHTML = days + "d " + hours + "h "
                + minutes + "m " + seconds + "s ";

            // If the count down is finished, write some text
            if (distance < 0) {
                clearInterval(x);
                document.getElementById("demo").innerHTML = "EXPIRED";
            }
        }, 1000);
    </script>
}